{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "SQSGated",
      "Effect": "Allow",
      "Action": [
        "sqs:createqueue",
        "sqs:deletequeue",
        "sqs:tagqueue",
        "sqs:getqueueattributes",
        "sqs:listqueuetags"
      ],
      "Resource": [
        "arn:${partition}:sqs:*:*:${deploy_id}*"
      ]
    },
    {
      "Sid": "LambdaGated",
      "Effect": "Allow",
      "Action": [
        "lambda:CreateFunction",
        "lambda:GetFunction",
        "lambda:ListVersionsByFunction",
        "lambda:DeleteFunction",
        "lambda:PutFunctionConcurrency",
        "lambda:AddPermission",
        "lambda:RemovePermission",
        "lambda:UpdateFunctionConfiguration",
        "lambda:GetPolicy"
      ],
      "Resource": [
        "arn:${partition}:lambda:*:*:function:${deploy_id}*"
      ]
    },
    {
      "Sid": "LambdaUngated",
      "Effect": "Allow",
      "Action": [
        "lambda:CreateCodeSigningConfig",
        "lambda:UpdateCodeSigningConfig",
        "lambda:GetCodeSigningConfig",
        "lambda:GetFunctionCodeSigningConfig",
        "lambda:DeleteCodeSigningConfig",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:ListTags"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SignerGated",
      "Effect": "Allow",
      "Action": [
        "signer:*"
      ],
      "Resource": "arn:${partition}:signer:*:${account_id}:/signing-profiles/cur_sp_*"
    },
    {
      "Sid": "DominoCurUngated",
      "Effect": "Allow",
      "Action": [
        "cur:PutReportDefinition",
        "cur:DescribeReportDefinitions",
        "cur:DeleteReportDefinition",
        "cur:TagResource",
        "cur:UntagResource",
        "cur:ListTagsForResource"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Sid": "ECRGated",
      "Effect": "Allow",
      "Action": [
        "ecr:CreateRepository",
        "ecr:DescribeRepositories",
        "ecr:ListTagsForResource",
        "ecr:TagResource",
        "ecr:UntagResource"
      ],
      "Resource": ["arn:${partition}:ecr:*:*:repository/${deploy_id}/*"]
    },
    {
      "Sid": "ECRUngated",
      "Effect": "Allow",
      "Action": [
        "ecr:CreatePullThroughCacheRule",
        "ecr:DescribePullThroughCacheRules"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "FSXUngated",
      "Effect": "Allow",
      "Action": [
        "fsx:*"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "SecretsManagerUngated",
      "Effect": "Allow",
      "Action": [
        "secretsmanager:*"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "CloudformationUngated",
      "Effect": "Allow",
      "Action": [
        "cloudformation:*"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "SNSUngated",
      "Effect": "Allow",
      "Action": [
        "sns:*"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "CloudwatchUngated",
      "Effect": "Allow",
      "Action": [
        "cloudwatch:*"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "S3fsxAutoSizing",
      "Effect": "Allow",
      "Action": [
        "s3:GetObject"
      ],
      "Resource": "arn:${partition}:s3:::solution-references-*"
    },
    {
      "Sid": "DatasyncUngated",
      "Effect": "Allow",
      "Action": [
        "datasync:*"
      ],
      "Resource": ["*"]
    },
    {
      "Sid": "GlobalAcceleratorUngated",
      "Effect": "Allow",
      "Action": [
        "globalaccelerator:CreateAccelerator",
        "globalaccelerator:DeleteAccelerator",
        "globalaccelerator:UpdateAccelerator",
        "globalaccelerator:DescribeAccelerator",
        "globalaccelerator:CreateListener",
        "globalaccelerator:DeleteListener",
        "globalaccelerator:UpdateListener",
        "globalaccelerator:DescribeListener",
        "globalaccelerator:CreateEndpointGroup",
        "globalaccelerator:DeleteEndpointGroup",
        "globalaccelerator:UpdateEndpointGroup",
        "globalaccelerator:DescribeEndpointGroup",
        "globalaccelerator:ListAccelerators",
        "globalaccelerator:ListListeners",
        "globalaccelerator:ListEndpointGroups",
        "globalaccelerator:TagResource",
        "globalaccelerator:DescribeAcceleratorAttributes",
        "globalaccelerator:UpdateAcceleratorAttributes",
        "globalaccelerator:ListTagsForResource",
        "globalaccelerator:ListCrossAccountResources"
      ],
      "Resource": "*"
    },
    {
      "Sid": "WAFUngated",
      "Effect": "Allow",
      "Action": [
        "wafv2:CreateWebACL",
        "wafv2:DeleteWebACL",
        "wafv2:UpdateWebACL",
        "wafv2:GetWebACL",
        "wafv2:DeleteWebACL",
        "wafv2:AssociateWebACL",
        "wafv2:DisassociateWebACL",
        "wafv2:PutLoggingConfiguration",
        "wafv2:DeleteLoggingConfiguration",
        "wafv2:GetLoggingConfiguration",
        "wafv2:ListWebACLs",
        "wafv2:ListResourcesForWebACL",
        "wafv2:TagResource",
        "wafv2:ListTagsForResource",
        "wafv2:GetWebACLForResource"
      ],
      "Resource": "*"
    },
    {
      "Sid": "WAFLoggingUngated",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogStream",
        "logs:DeleteLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents",
        "logs:GetLogEvents",
        "logs:FilterLogEvents",
        "logs:PutResourcePolicy",
        "logs:DeleteResourcePolicy",
        "logs:DescribeResourcePolicies"
      ],
      "Resource": "*"
    },
    {
      "Sid": "ElasticGated",
      "Effect": "Allow",
      "Action": [
        "elasticloadbalancing:SetSecurityGroups"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:ResourceTag/deploy_id": "${deploy_id}"
        }
      }
    },
    {
      "Sid": "EC2VpcEndpointServiceUngated",
      "Effect": "Allow",
      "Action": [
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcs",
        "ec2:DescribeSubnets",
        "vpce:AllowMultiRegion"
      ],
      "Resource": ["*"]
    }
  ]
}
