AWSTemplateFormatVersion: 2010-09-09

# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Description: Dynamically scale an Amazon FSx for NetApp ONTAP file system based on CloudWatch Alarm

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Dynamic Storage Scaling Parameters
        Parameters:
          - FileSystemId
          - LowFreeDataStorageCapacityThreshold
          - PercentIncrease
          - EmailAddress
          - MaxFSxSizeinGiB

    ParameterLabels:
      EmailAddress:
        default: Email address
      FileSystemId:
        default: File system ID
      MaxFSxSizeinGiB:
        default: Maximum supported file system storage capacity (DO NOT MODIFY)
      PercentIncrease:
        default: Percentage Capacity increase
      LowFreeDataStorageCapacityThreshold:
        default: Threshold

Parameters:
  EmailAddress:
    Description: The email address for alarm notification.
    Type: String
    Default: ""
  FileSystemId:
    AllowedPattern: ^(fs-)([a-z0-9]{17})$
    Description: Amazon FSx file system ID
    Type: String
  LowFreeDataStorageCapacityThreshold:
    ConstraintDescription: Must be an integer.
    Description: Used storage capacity threshold (%)
    Type: Number
  PercentIncrease:
    Description: The percentage increase in storage capacity when used storage exceeds LowFreeDataStorageCapacityThreshold. Minimum increase is 10 %
    Type: Number
    Default: 20
    MaxValue: 100
    MinValue: 10
  MaxFSxSizeinGiB:
    Description: Maximum size supported for the primary SSD storage tier.
    Default: 196608
    Type: Number
    MaxValue: 196608
    MinValue: 196608

Conditions:
  EmailProvided: !Not [!Equals [!Ref EmailAddress, ""]]

Resources:
  AlarmResetLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-reset-alarm
      Description: "Lambda function to reset the CloudWatch alarm every 6 hours."
      Handler: index.lambda_handler
      Runtime: python3.12
      Role: !GetAtt AlarmResetLambdaRole.Arn
      Timeout: 60
      Environment:
        Variables:
          ALARM_NAME: !Sub "Low free storage capacity alarm - ${FileSystemId}"
      Code:
        ZipFile: |
          import boto3
          import os

          cloudwatch = boto3.client('cloudwatch')
          alarm_name = os.environ['ALARM_NAME']

          def lambda_handler(event, context):
              cloudwatch.disable_alarm_actions(AlarmNames=[alarm_name])
              cloudwatch.enable_alarm_actions(AlarmNames=[alarm_name])
              return {"status": "Alarm reset triggered"}

  AlarmResetLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchAlarmResetPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:EnableAlarmActions
                  - cloudwatch:DisableAlarmActions
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  AlarmResetSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "rate(6 hours)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt AlarmResetLambda.Arn
          Id: "AlarmResetLambdaTarget"

  AlarmResetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref AlarmResetLambda
      Principal: "events.amazonaws.com"

  LowFreeDataStorageCapacityAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub ${SNSTopic}
      AlarmDescription:
        !Join ["", ["Low free storage capacity alarm - ", !Ref FileSystemId]]
      AlarmName:
        !Join ["", ["Low free storage capacity alarm - ", !Ref FileSystemId]]
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 5
      Metrics:
        - Expression: "(m2*100)/m1"
          Id: "e1"
          Label: PercentageStorageUsed
          ReturnData: true
        - Id: "m1"
          Label: StorageCapacity
          MetricStat:
            Metric:
              Dimensions:
                - Name: FileSystemId
                  Value: !Ref FileSystemId
              MetricName: StorageCapacity
              Namespace: AWS/FSx
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Id: "m2"
          Label: StorageUsed
          MetricStat:
            Metric:
              Dimensions:
                - Name: FileSystemId
                  Value: !Ref FileSystemId
              MetricName: StorageUsed
              Namespace: AWS/FSx
            Period: 60
            Stat: Average
          ReturnData: false
      Threshold: !Ref LowFreeDataStorageCapacityThreshold
      TreatMissingData: missing
